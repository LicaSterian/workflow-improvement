// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/arcade/workspace/workflow-improvement/main-service/interfaces/item_handler.go
//
// Generated by this command:
//
//	mockgen -destination /Users/arcade/workspace/workflow-improvement/main-service/mocks/interfaces/mocks.go -package interfaces_mocks -source /Users/arcade/workspace/workflow-improvement/main-service/interfaces/item_handler.go
//

// Package interfaces_mocks is a generated GoMock package.
package interfaces_mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockItemHandler is a mock of ItemHandler interface.
type MockItemHandler struct {
	ctrl     *gomock.Controller
	recorder *MockItemHandlerMockRecorder
	isgomock struct{}
}

// MockItemHandlerMockRecorder is the mock recorder for MockItemHandler.
type MockItemHandlerMockRecorder struct {
	mock *MockItemHandler
}

// NewMockItemHandler creates a new mock instance.
func NewMockItemHandler(ctrl *gomock.Controller) *MockItemHandler {
	mock := &MockItemHandler{ctrl: ctrl}
	mock.recorder = &MockItemHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockItemHandler) EXPECT() *MockItemHandlerMockRecorder {
	return m.recorder
}

// CreateItem mocks base method.
func (m *MockItemHandler) CreateItem(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateItem", w, r)
}

// CreateItem indicates an expected call of CreateItem.
func (mr *MockItemHandlerMockRecorder) CreateItem(w, r any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateItem", reflect.TypeOf((*MockItemHandler)(nil).CreateItem), w, r)
}
